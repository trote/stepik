#!/usr/bin/perl -w

use warnings;
use strict;

my %compass = ('север' => [0, 1],
               'запад' => [-1, 0],
               'юг' => [0, -1],
               'восток' => [1, 0]);
my @coord = (0, 0);
chomp(my $n = <>);
for ( 1.. $n ) {
    my ( $d, $v ) = split /\s+/, <>;
    $coord[0] += $v * $compass{$d}[0];
    $coord[1] += $v * $compass{$d}[1];
}

print "@coord";

__END__

=head1 NAME

Задачи по материалам недели

=head1 DESCRIPTION

Группа биологов в институте биоинформатики завела себе черепашку.

После дрессировки черепашка научилась понимать и запоминать указания биологов следующего вида:
север 10
запад 20
юг 30
восток 40
где первое слово — это направление, в котором должна двигаться черепашка, а число после слова — это положительное расстояние в сантиметрах, которое должна пройти черепашка.

Но команды даются быстро, а черепашка ползёт медленно, и программисты догадались, что можно написать программу, которая определит, куда в итоге биологи приведут черепашку. Для этого программисты просят вас написать программу, которая выведет точку, в которой окажется черепашка после всех команд. Для простоты они решили считать, что движение начинается в точке (0, 0), и движение на восток увеличивает первую координату, а на север — вторую.

Программе подаётся на вход число команд nn, которые нужно выполнить черепашке, после чего nn строк с самими командами. Вывести нужно два числа в одну строку: первую и вторую координату конечной точки черепашки. Все координаты целочисленные.

Sample Input:

4
север 10
запад 20
юг 30
восток 40

Sample Output:

20 -20

=cut
